<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_device_sequencer_8h_source" xml:lang="en-US">
<title>CDeviceSequencer.h</title>
<indexterm><primary>CDeviceSequencer.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_device_8h">CDevice.h</link>&quot;</emphasis>
4 
5 <emphasis role="keyword">class&#32;</emphasis>CEthernetControllerFirefly;
6 
7 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_c_device_sequencer_1aa0d293c8540f4f3ca712f08bd9ef4375">CDeviceSequencer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_c_device_1ab2a002fb6c828f07e8aebcd7dbf2cd00">CDevice</link>
8 {
9 <emphasis role="keyword">public</emphasis>:
10 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a501dfd73602558e66977641d6296adfc">id</link>;
11 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_c_device_sequencer_1a325e75933aa20ab3f46db3ef1c015bfc">type</link>;
12 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_c_device_sequencer_1ab872c2285452d0aa858d14c14c057faa">ip</link>;
13 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a0249d89b3c0f35de38e51be006c1c777">port</link>;
14 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a2007872507761fc8ab9941a96d58b455">master</link>;
15 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1aa679902977ccb1859873f2394dea74da">IsMaster</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a2007872507761fc8ab9941a96d58b455">master</link>;&#32;}
16 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a5589062e5cd2525cb7e6567628127365">startDelay</link>;
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ad0b4a49fd334a754d3d3da62b7ee81d8">clockFrequency</link>;
18 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a97daacafd5c7147b4726fa9817e245c3">FPGAClockToBusClockRatio</link>;
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ae48a0da4e027ca8607a769630d5bc33d">useExternalClock</link>;
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1af7614e368a833c743117573138080ae6">useStrobeGenerator</link>;
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a52584ca67a417eeeb50310541f79bca8">connect</link>;
22 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a55f9a66604df2870ae37aff441e7c4a1">BusFrequency</link>;
23 &#32;&#32;&#32;&#32;CEthernetControllerFirefly*&#32;<link linkend="_class_c_device_sequencer_1afe35c16dab9badb1defcbb2644b69d9c">MyEthernetMultiIOControllerFirefly</link>;
24 <emphasis role="keyword">private</emphasis>:
25 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;PCBufferSize_in_u64;
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;MaxBuffer&#32;=&#32;2;
27 &#32;&#32;&#32;&#32;uint8_t&#32;currentBuffer;
28 &#32;&#32;&#32;&#32;uint32_t*&#32;Buffer[MaxBuffer];
29 &#32;&#32;&#32;&#32;uint64_t&#32;AbsoluteTime_in_ms;
30 &#32;&#32;&#32;&#32;uint32_t&#32;BufferPosition;
31 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;Delay_in_ms;
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;TimeDebt_in_ms;&#32;
33 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;MaxTimeDebt_in_ms;
34 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;CurrentTimeDebt_in_ms;
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;LastCommandWasSpecialCommand;
36 &#32;&#32;&#32;&#32;uint32_t&#32;LastBusData;
37 <emphasis role="keyword">public</emphasis>:
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a442061907ecaaf27c3a7e9171b597e72">MaxParallelBusDevices</link>&#32;=&#32;8&#32;*&#32;256&#32;+&#32;1;
39 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a5155e6ccb4538489ff41a271344d6631">MaxSerialBusDevices</link>&#32;=&#32;8;
40 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_1ab2a002fb6c828f07e8aebcd7dbf2cd00">CDevice</link>*&#32;<link linkend="_class_c_device_sequencer_1a7e74050c18cc7e9e8015f88861b2e454">ParallelBusDeviceList</link>[<link linkend="_class_c_device_sequencer_1a442061907ecaaf27c3a7e9171b597e72">MaxParallelBusDevices</link>];
41 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_1ab2a002fb6c828f07e8aebcd7dbf2cd00">CDevice</link>*&#32;<link linkend="_class_c_device_sequencer_1acf65ed8d96c6f6c5afce93ced1693a85">SerialBusDeviceList</link>[<link linkend="_class_c_device_sequencer_1a5155e6ccb4538489ff41a271344d6631">MaxSerialBusDevices</link>];
42 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_sequencer_1aa0d293c8540f4f3ca712f08bd9ef4375">CDeviceSequencer</link>(
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_id,
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;_type,
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;_ip,
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_port,
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_master,
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_startDelay,
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;_clockFrequency,
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_FPGAClockToBusClockRatio,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_useExternalClock,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_useStrobeGenerator,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_connect);
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_c_device_sequencer_1af646da917bbb922c7928dcca66add13c">~CDeviceSequencer</link>();
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8cpp_1ad867e66c5ee033c10c2b19bda54ef936">Initialize</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;_PCBufferSize_in_u64);
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a10854f6a6ca1deec6752a58848bea582">SwitchDebugMode</link>(<emphasis role="keywordtype">bool</emphasis>&#32;OnOff,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;FileName);
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a75982403171bb9af945ca0529daec267">IsSequencerConnected</link>();
58 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a5a451f8a11a1da169fff225b927c392d">StartAssemblingSequence</link>();
59 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a5ea0e37bc768afd178a0680596d2cb75">SendSequenceToFPGA</link>();
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ae12a1e70fc37e10979ff0acccc3ea12a">GetBufferLength</link>(uint32_t&amp;&#32;FilledBufferLength,&#32;uint32_t&amp;&#32;MaxBufferLength);
61 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a1991feaf7cc573121697ccb9b7b9323d">SendStartSequenceCommand</link>();
62 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a16122a420c693e74ab8868fb1d38895f">IsSequenceRunning</link>(<emphasis role="keywordtype">bool</emphasis>&amp;&#32;running,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataPointsWritten);
63 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a163c503d4c7e4629e84eeb7eadcd9db8">WaitTillEndOfSequenceThenGetInputData</link>(uint8_t*&amp;&#32;buffer,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;buffer_length,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;EndTimeOfCycle,&#32;<emphasis role="keywordtype">double</emphasis>&#32;timeout_in_s);
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ab352a413fa6d48c9cc03faf57c8cfa32">AddCommandToSequence</link>(<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;high_word,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;low_word);
65 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1acccb21e905a84f6dd954feb4318db086">WriteBusAddressAndDataToBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;uint16_t&amp;&#32;MultiIOAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint16_t&amp;&#32;Data);
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a9a6701de6951ae59c599bf91edbcf29a">AddBusCommandAndWait</link>(uint32_t&#32;data,&#32;uint32_t&#32;delay);
67 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a9ad684a1cd8866041f8af665851e61fd">AddBusCommandToSequence</link>(<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;content);
68 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a325e2daaa28615bc44b27db0a4c3f377">SetValue_Sequencer</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit);
69 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ad9d968a730304e75c9e07255dedd003c">SetRegister_Sequencer</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit);
70 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1aeca54301a0e2e5b33afb0a5717886092">SetValueSerialDevice_Sequencer</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit);
71 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1aca4336ad38174dacb145def7ef35317d">SetRegisterSerialDevice_Sequencer</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit);
72 
73 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ab83a12612bc8d09574a43c356cc8a9df">Wait_ms</link>(<emphasis role="keywordtype">double</emphasis>&#32;time_in_ms);
74 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a43d39126fb474e9143569c720af1efea">GetTime_ms</link>();
75 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a07ebfe1673db09c97de7b88ed513fe52">GetTimeDebt_ms</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;TimeDebt_in_ms;&#32;};
76 <emphasis role="keyword">public</emphasis>:
77 &#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;following&#32;are&#32;commands&#32;to&#32;control&#32;the&#32;sequencer&#32;itself</emphasis>
78 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a0fae9f67b03f5360821e4aee8e0e5f14">SetValue</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit);
79 <emphasis role="keyword">public</emphasis>:
80 &#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;following&#32;commands&#32;are&#32;intended&#32;to&#32;be&#32;used&#32;by&#32;devices&#32;connected&#32;to&#32;the&#32;sequencer,&#32;such&#32;as&#32;analog&#32;input&#32;cards.</emphasis>
81 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1af4c40f6efe0f315ceafe15c07d8626c2">SequencerStartAnalogInAcquisition</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;ChannelNumber,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;NumberOfDataPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;DelayBetweenDataPoints_in_ms);
82 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1af7ed0331caa0c2b1b59d81b70c23545e">SequencerWriteInputMemory</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;input_buf_mem_data,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;write_next_address&#32;=&#32;1,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;input_buf_mem_address&#32;=&#32;0);
83 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a22f66dda6b836fe5c7b24ade065888ae">SequencerWriteSystemTimeToInputMemory</link>();
84 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a1f4dc1ed13ba3cb5d9687f930163ec53">SequencerSwitchDebugLED</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;OnOff);
85 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1af45d2dcd8aaa3ddf081c9d88d4d60938">SequencerIgnoreTCPIP</link>(<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
86 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1ae9c5f92c61a044f962942fcabcbb06c9">SequencerAddMarker</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;marker);
87 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a65193d6c01cceaad58fac3eba624dac0">SequencerSetTimeDebtGuard_in_ms</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;MaxTimeDebt_in_ms)&#32;{&#32;this-&gt;MaxTimeDebt_in_ms&#32;=&#32;MaxTimeDebt_in_ms;&#32;}
88 <emphasis role="keyword">public</emphasis>:
89 &#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;following&#32;functions&#32;are&#32;used&#32;by&#32;CControlAPI&#32;to&#32;find&#32;the&#32;desired&#32;device.&#32;Used&#32;for&#32;convenience&#32;functions.</emphasis>
90 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_1ab2a002fb6c828f07e8aebcd7dbf2cd00">CDevice</link>*&#32;<link linkend="_class_c_device_sequencer_1a042e1078c71ca62771140acb4b60f7e7">GetParallelBusDevice</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Address&#32;&gt;&#32;<link linkend="_class_c_device_sequencer_1a442061907ecaaf27c3a7e9171b597e72">MaxParallelBusDevices</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_device_sequencer_1a7e74050c18cc7e9e8015f88861b2e454">ParallelBusDeviceList</link>[Address];&#32;}
91 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_1ab2a002fb6c828f07e8aebcd7dbf2cd00">CDevice</link>*&#32;<link linkend="_class_c_device_sequencer_1ada57fb75303e4b7cf363e9a2e685cac7">GetSerialBusDevice</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address)&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Address&#32;&gt;&#32;<link linkend="_class_c_device_sequencer_1a5155e6ccb4538489ff41a271344d6631">MaxSerialBusDevices</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_device_sequencer_1acf65ed8d96c6f6c5afce93ced1693a85">SerialBusDeviceList</link>[Address];&#32;}
92 <emphasis role="keyword">private</emphasis>:
93 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AdvanceTime();
94 };
</programlisting></section>
