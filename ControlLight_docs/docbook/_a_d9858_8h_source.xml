<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__a_d9858_8h_source" xml:lang="en-US">
<title>AD9858.h</title>
<indexterm><primary>AD9858.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
3 
4 
5 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_c_device_sequencer">CDeviceSequencer</link>;
6 
7 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__a_d9858_8h_1a89debb04b626a7627663f9e047ecad53">AD9858MaxValues</link>=18;&#32;&#32;
8 <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__a_d9858_8h_1a526c5d02aa98074b09144cf92213a952">AD9858MaxBusBuffer</link>=256;
9 
10 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="__a_d9858_8h_1a4407ae7bea000c0d1644109e32de446d">AD9858ModeSingleTone</link>=0;
11 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="__a_d9858_8h_1a1e6c12f0901b79d1742cd8c433f8506e">AD9858ModeFrequencyShiftKeying</link>=1;
12 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="__a_d9858_8h_1af47fe9b6890cb115fa1828a3d73a34ee">AD9858ModeRampedFrequencyShiftKeying</link>=2;
13 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="__a_d9858_8h_1ae91161b9fd7189137e4adfb39af043ac">AD9858ModeChirp</link>=3;
14 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="__a_d9858_8h_1aa5cea71569139ae7678e5f03fe727a65">AD9858ModeBiphaseShiftKeying</link>=4;
15 
16 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_c_a_d9858_1a5b55ef58ac884d20b361fb207d7f7568">CAD9858</link>&#32;
17 {
18 <emphasis role="keyword">private</emphasis>:
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;ValueInBusBuffer[<link linkend="__a_d9858_8h_1a89debb04b626a7627663f9e047ecad53">AD9858MaxValues</link>];&#32;<emphasis role="comment">//stores&#32;Bus&#32;buffer&#32;address&#32;of&#32;next&#32;value&#32;to&#32;be&#32;written&#32;for&#32;future&#32;update</emphasis>
20 &#32;&#32;&#32;&#32;<emphasis role="comment">//Ring&#32;buffer&#32;for&#32;bus&#32;writing</emphasis>
21 &#32;&#32;&#32;&#32;<emphasis role="comment">//stores&#32;ValueNr&#32;of&#32;next&#32;Value&#32;to&#32;be&#32;written</emphasis>
22 &#32;&#32;&#32;&#32;uint8_t&#32;BusBuffer[<link linkend="__a_d9858_8h_1a526c5d02aa98074b09144cf92213a952">AD9858MaxBusBuffer</link>];&#32;
23 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;BusBufferStart;
24 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;BusBufferEnd;
25 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;BusBufferLength;
26 
27 &#32;&#32;&#32;&#32;__int64&#32;AktValueContentsWritten;
28 &#32;&#32;&#32;&#32;uint8_t&#32;AktValueNrWritten;
29 &#32;&#32;&#32;&#32;uint8_t&#32;AktSubAddressWritten;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
30 &#32;&#32;&#32;&#32;uint8_t&#32;WritePrecision[<link linkend="__a_d9858_8h_1a89debb04b626a7627663f9e047ecad53">AD9858MaxValues</link>];
31 
32 &#32;&#32;&#32;&#32;
33 &#32;&#32;&#32;&#32;__int64&#32;AktValueContents[<link linkend="__a_d9858_8h_1a89debb04b626a7627663f9e047ecad53">AD9858MaxValues</link>];&#32;<emphasis role="comment">//keeps&#32;track&#32;of&#32;Value,&#32;contains&#32;value&#32;after&#32;bus&#32;buffer&#32;has&#32;been&#32;finished&#32;to&#32;be&#32;written&#32;out</emphasis>
34 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;ClockSpeed;
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;InputClockSpeed;
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;MaxFrequency;&#32;&#32;&#32;&#32;
37 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;FrequencyScale;
38 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;UpdateRegistersModeAutomatic;
39 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;BaseAddress;
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;Bus;
41 <emphasis role="keyword">public</emphasis>:
42 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a36bd3a54691cb740a4f6420c7c8b0a94">FrequencyMultiplier</link>;
43 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1add2d20978631316318a3bd72a0962d33">PS0</link>;
44 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a17d98069e94939c3fb594d1d88a07280">PS1</link>;
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a90d289ef0299c95bc007b00e878d6874">Enabled</link>;
46 <emphasis role="keyword">public</emphasis>:&#32;&#32;&#32;&#32;&#32;
47 &#32;&#32;&#32;&#32;<link linkend="_class_c_a_d9858_1a5b55ef58ac884d20b361fb207d7f7568">CAD9858</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;aBaseAddress,&#32;<emphasis role="keywordtype">double</emphasis>&#32;aExternalClockSpeed,&#32;<emphasis role="keywordtype">double</emphasis>&#32;aFrequencyMultiplier,&#32;<link linkend="_class_c_device_sequencer">CDeviceSequencer</link>*&#32;_MyDeviceSequencer);
48 &#32;&#32;&#32;&#32;<link linkend="_class_c_a_d9858_1a1b287a93aa78dca09944bdabf16f9715">~CAD9858</link>();
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1ad23d4cfabd47db4b8e73406f1f92afd9">SetModulationFrequency</link>(<emphasis role="keywordtype">double</emphasis>&#32;ModulationFrequency,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);&#32;&#32;<emphasis role="comment">//ModulationFrequency&#32;in&#32;MHz</emphasis>
50 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1af8a9c8199e91a884fca30e65102d489a">MasterReset</link>();
51 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1af962cc79731569f2e3770c67cc994f06">SetUpdateRegistersModeAutomatic</link>();
52 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1ac73e98249df8ebdb966de15e558c0715">SetUpdateRegistersModeManual</link>();
53 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1aeb4ba9c68261e320c1e946b2dbca4b63">Set2GHzDividerDisable</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aDisable,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
54 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a8625d6c53615e437a91650b79c664df7">SetSYNCLKDisable</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aDisable,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a4dc395743ac2c1be750a52e30935a2b4">SetMixerPowerDown</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aPowerDown,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1acabc2b757faf9582ee0ced4513988fbb">SetPhaseDetectPowerDown</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aPowerDown,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a6a388b4025e94466a8c12256c6c470e5">SetPowerDown</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aPowerDown,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
58 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a8444e38024a21e9e5aaafed7807dc814">SetSDIOInputOnly</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
59 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1af12b9fe4c0c6aec710e545124e68c4f3">SetLSBFirst</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
60 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a006ca3231c0c8224499ef6fe7875995c">SetFrequencySweepEnable</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
61 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a6277c21701358b57832185a867e94eee">SetEnableSineOutput</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
62 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a8a18cca2e11de9fbb1f51c22ffbe9384">SetChargePumpOffset</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
63 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a485e191c37926ab88d252167efb1d4b1">SetChargePumpPolarity</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a4c394f8d30625cb698bfc77acbf84dac">SetAutoClearFrequencyAccumulator</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
65 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a3f6cfa6319063bcd02f9de8ddf6131a1">SetAutoClearPhaseAccumulator</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a8a460c352857bd5bfb77cd8d63502fba">SetLoadDeltaFrequencyTimer</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
67 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a6b7dfa13be60ebf83eca9a942a9e6f45">SetClearFrequencyAccumulator</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
68 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a87f99df96e64a05b06a88c1a4ba7a523">SetClearPhaseAccumulator</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
69 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a18718ea8f12a55e32fa7b8246ea1cca6">SetFastLockEnable</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
70 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a8ce3306f8471caefb28a95c42fff78f7">SetFTWForFastLock</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
71 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1a0b8565f60e58d4ae5e7633a70ddf1e40">SetPhaseDetectorDividerRatioN</link>(uint8_t&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
72 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1a3e1a48d677af1a94994bf0a1317b7b61">SetPhaseDetectorDividerRatioM</link>(uint8_t&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
73 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1ae4595d63391732d68105b9345f0e7de0">SetFrequencyDetectModeChargePumpCurrent</link>(uint8_t&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
74 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1ab43815d70c99e066920c94c89bcceb26">SetFinalClosedLoopModeChargePumpCurrent</link>(uint8_t&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
75 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1a55f5523942d4fed31db13a182a10b7af">SetWideClosedLoopModeChargePumpCurrent</link>(uint8_t&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
76 &#32;&#32;&#32;&#32;__int64&#32;<link linkend="_class_c_a_d9858_1a28004d2ef237bac8cdf954cb3e7c9a96">SetDeltaFrequencyWord</link>(__int64&#32;aDeltaFrequencyWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
77 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_c_a_d9858_1a824ca4beeb66e6fd97f5915765d1aae0">SetRampRateWord</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;aRampRateWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);&#32;&#32;&#32;&#32;
78 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a65740774881d4681d45ebdadce3ebbfc">SetAttenuation</link>(<emphasis role="keywordtype">double</emphasis>&#32;aValue,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
79 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a0b1839bde71aaf14f44c360cc449ac87">SetFrequency0</link>(<emphasis role="keywordtype">double</emphasis>&#32;Frequency,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
80 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a08a819a58a1efebd47b1881c48d52f50">SetFrequency1</link>(<emphasis role="keywordtype">double</emphasis>&#32;Frequency,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
81 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a25f86b7ec14c79aed86cc74ec0e94883">SetFrequency2</link>(<emphasis role="keywordtype">double</emphasis>&#32;Frequency,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
82 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_c_a_d9858_1a9c79047a7caf95dc6523380c1d8504e2">SetFrequency3</link>(<emphasis role="keywordtype">double</emphasis>&#32;Frequency,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
83 &#32;&#32;&#32;&#32;__int64&#32;<link linkend="_class_c_a_d9858_1a8b542d8d51863a395b71553ead11983d">SetFrequencyTuningWord0</link>(<emphasis role="keyword">const</emphasis>&#32;uint64_t&amp;&#32;FrequencyTuningWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue&#32;=&#32;<emphasis role="keyword">false</emphasis>);
84 &#32;&#32;&#32;&#32;__int64&#32;<link linkend="_class_c_a_d9858_1a993e6832e456f5f4a8ecfd2c5890485a">SetFrequencyTuningWord1</link>(<emphasis role="keyword">const</emphasis>&#32;uint64_t&amp;&#32;FrequencyTuningWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue&#32;=&#32;<emphasis role="keyword">false</emphasis>);
85 &#32;&#32;&#32;&#32;__int64&#32;<link linkend="_class_c_a_d9858_1ae6ce70b9312cf51b413985e8879ed905">SetFrequencyTuningWord2</link>(<emphasis role="keyword">const</emphasis>&#32;uint64_t&amp;&#32;FrequencyTuningWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue&#32;=&#32;<emphasis role="keyword">false</emphasis>);
86 &#32;&#32;&#32;&#32;__int64&#32;<link linkend="_class_c_a_d9858_1acede500c7f0ac91c92d65925caa81aed">SetFrequencyTuningWord3</link>(<emphasis role="keyword">const</emphasis>&#32;uint64_t&amp;&#32;FrequencyTuningWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue&#32;=&#32;<emphasis role="keyword">false</emphasis>);
87 
88 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_class_c_a_d9858_1a276564fa5abd92dfec7ac5b73536893f">SetPhaseOffsetWord0</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;aPhaseOffsetWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
89 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_class_c_a_d9858_1a9314258070f73cfc8166d821aa05d277">SetPhaseOffsetWord1</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;aPhaseOffsetWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
90 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_class_c_a_d9858_1a878f3bc78a35d02c3447be8faba3aaea">SetPhaseOffsetWord2</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;aPhaseOffsetWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
91 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_class_c_a_d9858_1a487d9fa0ff114f3e6f95c8ed6c12dc6b">SetPhaseOffsetWord3</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;aPhaseOffsetWord,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
92 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a47b76f7cfdf9a6326e09a844deb327b8">SetPS0</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aPS0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
93 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a37628c1ac9d96e165dc4de9d9bc707ca">SetPS1</link>(<emphasis role="keywordtype">bool</emphasis>&#32;aPS1,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);
94 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1ac3247b8750d735aa14897320189c72ab">Enable</link>(<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
95 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_c_a_d9858_1af65c76a5d99e50188c0a1160049b0de9">SetFrequencyWritePrecision</link>(uint8_t&#32;Precision,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue=<emphasis role="keyword">false</emphasis>);&#32;
96 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a7a85926f95ef3be942ca5aab394573d5">WriteToBus</link>();
97 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1a2b52b1877e8535feea93e6e1039f012b">WriteAllToBus</link>();
98 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_a_d9858_1a64151c1bcf7e761b106fd742d0663d74">HasSomethingToWriteToBus</link>()&#32;{&#32;<emphasis role="comment">//inline&#32;code&#32;for&#32;speed</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_c_a_d9858_1a90d289ef0299c95bc007b00e878d6874">Enabled</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((BusBufferLength==0)&#32;&amp;&amp;&#32;(AktValueNrWritten==99))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
102 &#32;&#32;&#32;&#32;}
103 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1af337c38d6e6af24807ded8e48bf25a66">FrequencyRamp</link>(<emphasis role="keywordtype">double</emphasis>&#32;StartFrequency,&#32;<emphasis role="keywordtype">double</emphasis>&#32;StopFrequency,&#32;<emphasis role="keywordtype">double</emphasis>&#32;RampTime);&#32;<emphasis role="comment">//Frequencies&#32;in&#32;MHz,&#32;RampTime&#32;in&#32;ms</emphasis>
104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_a_d9858_1a466034372fd30efd981266820b591477">FrequencyModulation</link>(<emphasis role="keywordtype">double</emphasis>&#32;StartFrequency,&#32;<emphasis role="keywordtype">double</emphasis>&#32;StopFrequency,&#32;<emphasis role="keywordtype">double</emphasis>&#32;ModulationFrequency);&#32;<emphasis role="comment">//Frequencies&#32;in&#32;MHz</emphasis>
105 <emphasis role="keyword">private</emphasis>:
106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetControlBit(uint8_t&#32;RegisterNr,&#32;uint8_t&#32;BitNr,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Value,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue);
107 &#32;&#32;&#32;&#32;uint8_t&#32;SetControlBits(uint8_t&#32;RegisterNr,&#32;uint8_t&#32;LowestBitNr,&#32;uint8_t&#32;NrBits,&#32;uint8_t&#32;Value,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue);
108 &#32;&#32;&#32;&#32;__int64&#32;SetValue(uint8_t&#32;ValueNr,&#32;__int64&#32;Value,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetValue);
109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;LoadLatches();
110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateRegisters();
111 &#32;&#32;&#32;&#32;<link linkend="_class_c_device_sequencer">CDeviceSequencer</link>*&#32;MyDeviceSequencer;
112 };
113 
</programlisting></section>
