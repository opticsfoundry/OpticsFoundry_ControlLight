<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__control_a_p_i_8h_source" xml:lang="en-US">
<title>ControlAPI.h</title>
<indexterm><primary>ControlAPI.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 
4 
5 <emphasis role="comment">//#ifndef&#32;USING_DLL</emphasis>
6 <emphasis role="preprocessor">#define&#32;_AFXDLL</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;afxwin.h&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MFC&#32;core&#32;and&#32;standard&#32;components</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
9 <emphasis role="comment">//bool&#32;InitializeMFC();</emphasis>
10 <emphasis role="comment">//#endif</emphasis>
11 
12 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;uint8_t,&#32;uint32_t,&#32;etc.</emphasis>
13 
14 <emphasis role="preprocessor">#ifdef&#32;PYTHON_API</emphasis>
15 <emphasis role="preprocessor">#undef&#32;C_API</emphasis>
16 <emphasis role="preprocessor">#define&#32;THROW_EXCEPTIONS</emphasis>
17 <emphasis role="preprocessor">#define&#32;API_CLASS</emphasis>
18 <emphasis role="preprocessor">#define&#32;BUILDING_DLL</emphasis>
19 <emphasis role="preprocessor">#endif</emphasis>
20 
21 <emphasis role="preprocessor">#ifdef&#32;API_CLASS</emphasis>
22 <emphasis role="preprocessor">#undef&#32;C_API</emphasis>
23 <emphasis role="preprocessor">#endif</emphasis>
24 
25 <emphasis role="preprocessor">#ifdef&#32;C_API</emphasis>
26 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
27 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
28 <emphasis role="preprocessor">#endif</emphasis>
29 <emphasis role="preprocessor">#else</emphasis>
30 <emphasis role="preprocessor">#ifdef&#32;NAMESPACE_CLA</emphasis>
31 <emphasis role="keyword">namespace&#32;</emphasis>CLA&#32;{&#32;<emphasis role="comment">//optional,&#32;for&#32;C++&#32;APIs,&#32;use&#32;namespace&#32;CLA,&#32;instead&#32;of&#32;preceding&#32;function&#32;names&#32;with&#32;CLA_.</emphasis>
32 <emphasis role="preprocessor">#endif</emphasis>
33 <emphasis role="preprocessor">#endif</emphasis>
34 
35 <emphasis role="preprocessor">#define&#32;API_EXPORT</emphasis>
36 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS</emphasis>
37 
38 
39 <emphasis role="preprocessor">#ifdef&#32;API_CLASS</emphasis>
40 
41 <emphasis role="preprocessor">#define&#32;API_EXPORT</emphasis>
42 
43 <emphasis role="preprocessor">#ifdef&#32;BUILDING_DLL</emphasis>
44 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
45 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS&#32;__declspec(dllexport)</emphasis>
46 <emphasis role="preprocessor">#else</emphasis>
47 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS</emphasis>
48 <emphasis role="preprocessor">#endif</emphasis>
49 <emphasis role="preprocessor">#endif</emphasis>
50 
51 <emphasis role="preprocessor">#ifdef&#32;USING_DLL&#32;</emphasis>
52 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
53 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS&#32;__declspec(dllimport)</emphasis>
54 <emphasis role="preprocessor">#else</emphasis>
55 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS</emphasis>
56 <emphasis role="preprocessor">#endif</emphasis>
57 <emphasis role="preprocessor">#endif</emphasis>
58 
59 <emphasis role="preprocessor">#else</emphasis>
60 
61 <emphasis role="preprocessor">#define&#32;API_EXPORT_CLASS</emphasis>
62 <emphasis role="preprocessor">#ifdef&#32;BUILDING_DLL</emphasis>
63 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
64 <emphasis role="preprocessor">#define&#32;API_EXPORT&#32;__declspec(dllexport)</emphasis>
65 <emphasis role="preprocessor">#else</emphasis>
66 <emphasis role="preprocessor">#define&#32;API_EXPORT</emphasis>
67 <emphasis role="preprocessor">#endif</emphasis>
68 <emphasis role="preprocessor">#endif</emphasis>
69 
70 <emphasis role="preprocessor">#ifdef&#32;USING_DLL&#32;</emphasis>
71 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
72 <emphasis role="preprocessor">#define&#32;API_EXPORT&#32;__declspec(dllimport)</emphasis>
73 <emphasis role="preprocessor">#else</emphasis>
74 <emphasis role="preprocessor">#define&#32;API_EXPORT</emphasis>
75 <emphasis role="preprocessor">#endif</emphasis>
76 <emphasis role="preprocessor">#endif</emphasis>
77 
78 <emphasis role="preprocessor">#endif</emphasis>
79 
80 
81 
82 <emphasis role="preprocessor">#ifdef&#32;THROW_EXCEPTIONS</emphasis>
83 <emphasis role="preprocessor">#define&#32;ERROR_CODE_TYPE&#32;void</emphasis>
84 
85 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>CLA_Exception&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;std::runtime_error&#32;{
88 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;CLA_Exception(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;message)
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;std::runtime_error(message)&#32;{}
91 &#32;&#32;&#32;&#32;};
92 
93 <emphasis role="preprocessor">#else&#32;</emphasis>
94 <emphasis role="preprocessor">#define&#32;ERROR_CODE_TYPE&#32;bool</emphasis>
95 <emphasis role="preprocessor">#endif</emphasis>
96 
97 &#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__control_a_p_i_8h_1ab0e1cf239ac3e235992bc858f58e7ea9">MaxLastError</link>&#32;=&#32;10;
98 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;std::string&#32;<link linkend="__control_a_p_i_8cpp_1a7d8ab587f73458e320154369f6a74c01">LastError</link>[<link linkend="__control_a_p_i_8h_1ab0e1cf239ac3e235992bc858f58e7ea9">MaxLastError</link>];
99 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__control_a_p_i_8cpp_1aa8c7d164d3b3d02712b59520ac38b9e3">LastErrorIndex</link>;
100 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__control_a_p_i_8cpp_1a679deb1765f3544a100264eebb793da3">ErrorListWrapAround</link>;
101 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;DisplayErrors&#32;=&#32;<emphasis role="keyword">true</emphasis>;
102 
103 &#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8cpp_1ab4216036d280f0e2357f4895feae00b3">AddErrorMessage</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;error_message);
104 
105 
106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;!defined(BUILDING_DLL)&#32;&amp;&amp;&#32;defined(USING_DLL)</emphasis>
107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;API_EXPORT&#32;</emphasis>
108 
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//InitilizeMFC()&#32;is&#32;needed&#32;when&#32;using&#32;this&#32;code&#32;directly&#32;in&#32;an&#32;exe,&#32;not&#32;through&#32;a&#32;DLL.&#32;</emphasis>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;you&#32;don&apos;t&#32;have&#32;MFC&#32;already&#32;initialized,&#32;you&#32;need&#32;to&#32;call&#32;this&#32;function,&#32;or&#32;a&#32;similar&#32;one&#32;adapted&#32;to&#32;your&#32;purposes.</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//This&#32;is&#32;not&#32;exported&#32;to&#32;the&#32;DLL,&#32;because&#32;it&#32;is&#32;automatically&#32;called&#32;in&#32;the&#32;DLLMain&#32;function&#32;when&#32;the&#32;DLL&#32;is&#32;loaded.</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//extern&#32;bool&#32;CLA_InitializeMFC();</emphasis>
113 
114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
115 
116 
117 
118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;defined(BUILDING_DLL)&#32;||&#32;defined(USING_DLL)</emphasis>
119 
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;class&#32;CControlApp&#32;:&#32;public&#32;CObject</emphasis>
123 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
124 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;public:</emphasis>
125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CControlApp();</emphasis>
126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;virtual&#32;~CControlApp();</emphasis>
127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool&#32;Initialize();</emphasis>
128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HINSTANCE&#32;m_hInstance;</emphasis>
129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};</emphasis>
130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
131 
132 
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//typedef&#32;void*&#32;HControlLightAPI;</emphasis>
134 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;BUILDING_DLL</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BOOL&#32;APIENTRY&#32;DllMain(HMODULE,&#32;DWORD,&#32;LPVOID);
136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
139 
140 
141 
142 <emphasis role="preprocessor">#ifdef&#32;API_CLASS</emphasis>
143 
144 <emphasis role="preprocessor">#define&#32;CLA_FN(name)&#32;name</emphasis>
145 <emphasis role="preprocessor">#define&#32;CLA_FNDEF(name)&#32;ControlLight_API::##name</emphasis>
146 
147 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="__control_a_p_i_8h_1a1c3cf2d9d1101f8bf1e704b2bae1455a">API_EXPORT_CLASS</link>&#32;ControlLight_API&#32;{
148 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Created;
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ControlLight_API(<emphasis role="keywordtype">bool</emphasis>&#32;InitializeAfx&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;InitializeAfxSocket&#32;=&#32;<emphasis role="keyword">true</emphasis>);
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;~ControlLight_API();
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsCreated();
153 
154 <emphasis role="preprocessor">#else</emphasis>
155 <emphasis role="preprocessor">#define&#32;CLA_FN(name)&#32;CLA_##name</emphasis>
156 <emphasis role="preprocessor">#define&#32;CLA_FNDEF(name)&#32;CLA_##name</emphasis>
157 <emphasis role="preprocessor">#endif</emphasis>
158 
159 
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//API_EXPORT&#32;HControlLightAPI&#32;CLA_GetInstance();</emphasis>
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Call&#32;these&#32;functions&#32;in&#32;roughly&#32;this&#32;order</emphasis>
164 
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a2d2fa043e1432b195756a9b7476d14b6">Create</link>)(<emphasis role="keywordtype">bool</emphasis>&#32;InitializeAfx,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;InitializeAfxSocket);&#32;<emphasis role="comment">//you&#32;must&#32;call&#32;this&#32;first,&#32;otherwise&#32;the&#32;API&#32;will&#32;not&#32;work</emphasis>
175 
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1aa969e43b23ebfb657bee5e58271cfffd">Cleanup</link>)();&#32;<emphasis role="comment">//You&#32;must&#32;call&#32;this&#32;before&#32;leaving&#32;your&#32;program,&#32;otherwise&#32;the&#32;API&#32;can&#32;provoke&#32;errors&#32;because&#32;memory&#32;is&#32;not&#32;freed</emphasis>
182 
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ad0f0f525900c7042af9735df225b5bb4">DidErrorOccur</link>)();
187 
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ae2c09044776f2f9cc07d3be713ed0ecf">GetLastError</link>)();
192 
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a9f8b440cc01917e60b5d4d3e9f274f2d">Configure</link>)(<emphasis role="keywordtype">bool</emphasis>&#32;_DisplayErrors);&#32;<emphasis role="comment">//optional</emphasis>
197 
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a2ccba55530e6bf0416c9402ec5554a27">LoadFromJSONFile</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
203 
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Once&#32;all&#32;devices&#32;have&#32;been&#32;declared,&#32;you&#32;must&#32;initialize&#32;the&#32;system,&#32;otherwise&#32;the&#32;API&#32;will&#32;not&#32;work</emphasis>
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ad867e66c5ee033c10c2b19bda54ef936">Initialize</link>)();
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Some&#32;optional&#32;commands</emphasis>
210 
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a3186ff65e19d503d7e7d346f3179f08e">SwitchDebugMode</link>)(<emphasis role="keywordtype">bool</emphasis>&#32;OnOff,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;FileName);
218 
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a8d65f99963c14d7859b47abddc82070f">IsReady</link>)();
222 
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//To&#32;start&#32;a&#32;sequence,&#32;first&#32;call&#32;StartAssemblingSequence,&#32;then&#32;add&#32;all&#32;the&#32;commands&#32;you&#32;want&#32;to&#32;execute&#32;in&#32;the&#32;sequence</emphasis>
224 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a5f131f6edd5d984d6469eefda7fa2950">StartAssemblingSequence</link>)();
229 
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//here&#32;are&#32;possible&#32;commands</emphasis>
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1abad197bb4342619e8483e132c918a48c">SetRegister</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit&#32;=&#32;0);
244 
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a5f8a2790ef4d7b1539b711a4964a6b10">SetValue</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit&#32;=&#32;0);
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a94fc2280ca22d053f9b135338a3d291c">SetValueSerialDevice</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit&#32;=&#32;0);
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ab7171666e35ae8e3f4cfeca2c3ed4385">SetRegisterSerialDevice</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;SubAddress,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;Data,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataLength_in_bit,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;StartBit&#32;=&#32;0);
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a559c22b0fee213f47cc2bcfac3570138">Wait_ms</link>)(<emphasis role="keywordtype">double</emphasis>&#32;time_in_ms);
284 
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a221429e81929d758713b37ef122e6675">GetTime_ms</link>)(<emphasis role="keywordtype">double</emphasis>&amp;&#32;time_in_ms);
289 
290 
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1ae89d33bd59c5669016e4694ae249bd0c">CLA_FNDEF</link>(<link linkend="__control_a_p_i_8cpp_1a21be816bc7405b76d68549abf1837ebd">GetTimeOfSequencer_ms</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;time_in_ms);
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1ae89d33bd59c5669016e4694ae249bd0c">CLA_FNDEF</link>(<link linkend="__control_a_p_i_8cpp_1a659cc537a03ff9e172efbfee6b8f29fe">GetTimeDebtOfSequencer_ms</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;time_debt_in_ms);
302 
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;following&#32;are&#32;convenience&#32;functions,&#32;which&#32;allow&#32;us&#32;to&#32;define&#32;nice&#32;names&#32;to&#32;the&#32;few&#32;most&#32;important&#32;functions</emphasis>
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//You&#32;can&#32;add&#32;as&#32;many&#32;convenience&#32;functions&#32;as&#32;you&#32;like.&#32;Make&#32;sure&#32;to&#32;copy&#32;them&#32;also&#32;into&#32;the&#32;list&#32;of&#32;convenience&#32;functions&#32;in&#32;CDevice,&#32;CDevice.h,&#32;to&#32;assure&#32;they&#32;can&#32;always&#32;be&#32;called&#32;in&#32;any&#32;device.</emphasis>
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Then&#32;define&#32;them&#32;in&#32;the&#32;device&#32;that&#32;provides&#32;the&#32;function.&#32;In&#32;this&#32;way&#32;we&#32;use&#32;the&#32;inheritance&#32;mechanism&#32;to&#32;automatically&#32;check&#32;if&#32;the&#32;function&#32;is&#32;available&#32;in&#32;the&#32;device&#32;and&#32;)(optionally)&#32;produce&#32;an&#32;error&#32;if&#32;not.</emphasis>
306 
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Analog&#32;out</emphasis>
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convenience&#32;functions&#32;to&#32;easily&#32;access&#32;the&#32;most&#32;important&#32;functions&#32;of&#32;the&#32;devices</emphasis>
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Analog&#32;out</emphasis>
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a94082ed5fabf2e2f1fdb9ddff5e3f927">SetVoltage</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Voltage);
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Digital&#32;out</emphasis>
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1aafc22ae54400ca0dac7c5ae2c9a5323e">SetDigitalOutput</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;BitNr,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
323 
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//AD9854</emphasis>
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1aeaefe9e4f0c4d23e645cdbd5ee32ce0a">SetStartFrequency</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Frequency);
331 
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ad489aba20c7cdadcc9686fe4a7491e2d">SetStopFrequency</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Frequency);
338 
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a0949f1333682c8a43913831669155d65">SetModulationFrequency</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Frequency);
345 
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a0bf8ab1ba1ef75a7ffe7a6cf9122b30d">SetPower</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Power);
352 
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a3dd0fc517153ec5ba8507c7e799942aa">SetAttenuation</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Attenuation);
359 
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a9bd59aedb811a015970e0be2bea8b124">SetStartFrequencyTuningWord</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint64_t&#32;FrequencyTuningWord);
366 
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a644830db2c0da6c7eb0008bff6cd025a">SetStopFrequencyTuningWord</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint64_t&#32;FrequencyTuningWord);
373 
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a04caf38d2f875d81db071c501665bd52">SetFSKMode</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;mode);
380 
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a45c53df7b4c759187b6d3f5981056a09">SetRampRateClock</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;rate);
387 
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1adf175ebeaa66ad48a1d628fc80709d1a">SetClearACC1</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
394 
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ade90a369329eaf77f7f4611f05ca093b">SetTriangleBit</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
401 
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a13fdb690bdb322e5d8d90d0d4cb5ea2d">SetFSKBit</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
408 
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//AD9858</emphasis>
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1adebc9e720e4b0afda1c4b980fbc11459">SetFrequency</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Frequency);
417 
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a4deeeed623c85a57469dae267fc009e9">SetFrequencyTuningWord</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint64_t&#32;FrequencyTuningWord);
424 
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//those&#32;two&#32;functions&#32;have&#32;been&#32;defined&#32;already&#32;in&#32;the&#32;context&#32;of&#32;the&#32;AD9854,&#32;so&#32;we&#32;don&apos;t&#32;need&#32;to&#32;redefine&#32;them&#32;here</emphasis>
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//API_EXPORT&#32;ERROR_CODE_TYPE&#32;CLA_FN(SetPower)(const&#32;unsigned&#32;int&amp;&#32;Sequencer,&#32;const&#32;unsigned&#32;int&amp;&#32;Address,&#32;double&#32;Power);//same&#32;as&#32;for&#32;AD9854,&#32;no&#32;need&#32;to&#32;redefine</emphasis>
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//API_EXPORT&#32;ERROR_CODE_TYPE&#32;CLA_FN(SetAttenuation)(const&#32;unsigned&#32;int&amp;&#32;Sequencer,&#32;const&#32;unsigned&#32;int&amp;&#32;Address,&#32;double&#32;Power);</emphasis>
428 
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//AD9958</emphasis>
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a36fa5bbf98b9f2680225d630a3319636">SetFrequencyOfChannel</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;channel,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Frequency);
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ab864571d668680c9096085c5ed337592">SetFrequencyTuningWordOfChannel</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;channel,&#32;uint64_t&#32;FrequencyTuningWord);
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a3d8f917be9190e50af5d548416f9fcd7">SetPhaseOfChannel</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;channel,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Phase);
453 
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a561caef491d5510871c71610620cd317">SetPowerOfChannel</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Address,&#32;uint8_t&#32;channel,&#32;<emphasis role="keywordtype">double</emphasis>&#32;Power);
461 
462 
463 
464 
465 
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;once&#32;the&#32;sequence&#32;is&#32;assembled,&#32;then&#32;execute&#32;it&#32;</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1abeddda80e86e53e54428d759a8a7936c">ExecuteSequence</link>)();
471 
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//check&#32;how&#32;far&#32;the&#32;sequence&#32;has&#32;been&#32;executed</emphasis>
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ae827da631cb9135289137a331bc3e3a9">GetSequenceExecutionStatus</link>)(<emphasis role="keywordtype">bool</emphasis>&amp;&#32;running,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;DataPointsWritten);
477 
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Wait&#32;till&#32;the&#32;sequence&#32;is&#32;finished,&#32;and&#32;get&#32;the&#32;data&#32;from&#32;the&#32;input&#32;devices</emphasis>
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ae11c2f457429ac307cee5322e091eb7c">WaitTillEndOfSequenceThenGetInputData</link>)(uint8_t*&amp;&#32;buffer,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;buffer_length,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&#32;<emphasis role="keywordtype">long</emphasis>&amp;&#32;EndTimeOfCycle,&#32;<emphasis role="keywordtype">double</emphasis>&#32;timeout_in_s);
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a6ae5f98b269cf285416e23dbd2928946">SetTimeDebtGuard_in_ms</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;MaxTimeDebt_in_ms);
490 
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a6946fdb3fdd2440bd73aee6f72b0501e">SequencerStartAnalogInAcquisition</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&amp;&#32;ChannelNumber,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;NumberOfDataPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;DelayBetweenDataPoints_in_ms);
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1acdff3dba475709add5fd0048e7f4a949">SequencerWriteInputMemory</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;input_buf_mem_data,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;write_next_address&#32;=&#32;1,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;input_buf_mem_address&#32;=&#32;0);
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a4984974edc2acf116b3d5921e909b6fd">SequencerWriteSystemTimeToInputMemory</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer);
519 
524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ae7807aa91bd081ff8dd83522fbddff94">SequencerSwitchDebugLED</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;OnOff);
525 
533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a72f33e9b346a9b89489678dca5e7908f">SequencerIgnoreTCPIP</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;OnOff);
534 
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a5fd6294ae4f463293e5b4ac8ca5f5f29">SequencerAddMarker</link>)(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;Sequencer,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;marker);
539 
540 
541 
542 
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;following&#32;functions&#32;are&#32;used&#32;to&#32;add&#32;devices&#32;to&#32;the&#32;sequencer.&#32;I&#32;placed&#32;them&#32;here&#32;to&#32;aAPI_EXPORT&#32;void&#32;clutter&#32;above.&#32;They&#32;have&#32;to&#32;be&#32;called&#32;before&#32;Initialize)().&#32;&#32;</emphasis>
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a83ca1191c0cd2236753caccbc688ccc8">AddDeviceSequencer</link>)(
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;id,
559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;type,
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;ip,
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;port,
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;master,
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;startDelay,
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;clockFrequency,
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;FPGAClockToBusClockRatio,
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useExternalClock,
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useStrobeGenerator,
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;connect);
569 
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1a9b9d47663058740484d1b6c772967567">AddDeviceAnalogOut16bit</link>)(
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sequencer,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;startAddress,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberChannels,
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signedValue,
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;minVoltage,
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxVoltage);
585 
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1ac4890589c0e5b5b4cb59d7ccd3f5606c">AddDeviceDigitalOut</link>)(
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sequencer,
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;address,
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberChannels);
595 
596 
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1af2e5d254aaad92f36a124ff029994fec">AddDeviceAD9854</link>)(
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sequencer,
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;address,
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;version,
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;externalClockFrequency,
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;PLLReferenceMultiplier,
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;frequencyMultiplier);
612 
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1acdbe85dfdbc1ba43905be7c1e63334d2">AddDeviceAD9858</link>)(
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sequencer,
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;address,
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;externalClockFrequency,
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;frequencyMultiplier);
624 
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__control_a_p_i_8h_1a5e3652cae8b48c1ad174f0b06bbd06d0">API_EXPORT</link>&#32;<link linkend="__control_a_p_i_8h_1aeb04e3165c1e12a3653ac311ee466995">ERROR_CODE_TYPE</link>&#32;<link linkend="__control_a_p_i_8h_1a508a3fd47b47db49be429d0149e6df38">CLA_FN</link>(<link linkend="__control_a_p_i_8cpp_1aa6f77c364b5e13820a3b84cd7a9e517e">AddDeviceAnalogIn12bit</link>)(
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sequencer,
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;chipSelect,
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signedValue,
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;minVoltage,
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxVoltage);
638 
639 
640 <emphasis role="preprocessor">#ifdef&#32;API_CLASS</emphasis>
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
642 
643 <emphasis role="preprocessor">#endif</emphasis>
644 &#32;&#32;&#32;&#32;
645 
646 <emphasis role="preprocessor">#ifdef&#32;C_API</emphasis>
647 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
648 }
649 <emphasis role="preprocessor">#endif</emphasis>
650 <emphasis role="preprocessor">#else</emphasis>
651 <emphasis role="preprocessor">#ifdef&#32;NAMESPACE_CLA</emphasis>
652 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//option&#32;namespace&#32;CLA</emphasis>
653 <emphasis role="preprocessor">#endif</emphasis>
654 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
